name: Deploy Library to GitHub

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: download + setup auto
        uses: auto-it/setup-auto@v1

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          
      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Build
        env:
          NPM_TOKEN: ${{ secrets.INFINEON_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          npm install
          npm run build

      - name: Commit changes
        env:
          BRANCH_NAME: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            echo "No changes to commit."
          else
            echo "Committing changes"
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add .
            git commit -m "Updated glyphmap"
            git push origin HEAD:$BRANCH_NAME
          fi

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm (PR)
        if: github.event_name == 'pull_request'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.INFINEON_TOKEN }}
        run: |
          echo "Publishing with --tag canary"
          auto shipit

      - name: Publish to npm (master)
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.INFINEON_TOKEN }}
        run: |
          echo "Publishing without tag"
          npm publish
